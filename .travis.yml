dist: xenial
language: cpp
sudo: required
addons:
  apt:
    sources:
    - ubuntu-toolchain-r-test
    packages:
    - g++
    - cmake
    - cmake-data
    - libssl-dev 
    - gdb
matrix:
    include:
        - name: Linux (gcc-8)
          os: linux
          dist: xenial
          env:
              - CC=gcc-8
              - CXX=g++-8
              - EXTRA_LDFLAGS="-fuse-ld=gold"
        - name: Linux (clang)
          os: linux
          dist: xenial
          env:
              - CC=clang
              - CXX=clang++
        - name: Linux (scan-build)
          os: linux
          dist: xenial
          env:
              - CC=/usr/local/clang/libexec/ccc-analyzer
              - CXX=/usr/local/clang/libexec/c++-analyzer
              - EXTRA="scan-build"
        - name: Linux (cppcheck)
          os: linux
          dist: xenial
          env:
              - CHECK="cppcheck"
before_install:
  - cmake --version
before_script:
  # First build external lib
  - ./ci/build_picotls.sh
  - if [ "$CHECK" == "cppcheck" ]; then ./ci/build_cppcheck.sh; fi
  - sudo sh -c 'echo 0 > /proc/sys/net/ipv6/conf/all/disable_ipv6'
script:
  # Now build picotls examples and test
  - echo $CC
  - echo $CXX
  - ${EXTRA} cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON .
  - if [ "$CHECK" == "cppcheck" ]; then cppcheck --project=compile_commands.json; fi
  - ${EXTRA} make
  - ulimit -c unlimited -S
  - ./picoquic_ct -n && RESULT=$?
  # Early out if the program exited successfully
  - if [[ ${RESULT} == 0 ]]; then exit 0; fi;
  - for i in $(find ./ -maxdepth 1 -name 'core*' -print); do gdb $(pwd)/picoquic_ct core* -ex "thread apply all bt" -ex "set pagination 0" -batch; done;
